@using KermesseApp.Models;

@{
    /*Instanciamos objetos y variables */
    KERMESSEEntities db = new KERMESSEEntities();
    tbl_usuario tu = new tbl_usuario();
    tbl_rol_usuario tru = new tbl_rol_usuario();
    List<vw_rol_opciones> listopc = new List<vw_rol_opciones>();
    Int32 idRol = 0;
    String opcion = "";
    Int32 longitud = 0;
    Boolean acceso = false;

    /* Obtenemos la sesion */
    tu = Session["usuario"] as tbl_usuario;

    /* Obtenemos el rol del usuario*/
    tru = db.tbl_rol_usuario.Where(x => x.id_usuario.Equals(tu.id_usuario)).FirstOrDefault();
    idRol = tru.id_rol;
    /* Obtenemos la lista de opciones del rol*/
    listopc = db.vw_rol_opciones.Where(x => x.id_rol.Equals(idRol)).ToList();

    string url = HttpContext.Current.Request.Url.AbsoluteUri;
    string[] separado = url.Split('/');
    string opcionActual = separado[separado.Length - 1];

    longitud = listopc.Count();//Obtenemos la cantidad de elementos
    for (int i = 0; i < longitud; i++)
    {
        //obtenemos la columna opcion de la matriz y/o lista de elementos
        opcion = listopc[i].opcion;
        if (opcionActual.Equals(opcion)) //COMPARAMOS LA OPCION ACTUAL CON CADA OPCIÓN DE LA MATRIZ
        {
            acceso = true; //ACCESO CONCEDIDO
            break;
        }
    }
    if (!acceso)
    {
        Response.Redirect("~/Home/Error");
    }

}
@model KermesseApp.Models.tbl_listaprecio

@{
    ViewBag.Title = "Editar Lista Precio";
}

<h2>Editar Lista Precio</h2>

@using (Html.BeginForm("ActualizarListaPrecio", "Tbl_listaprecio", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <h4>Datos del Lista Precio</h4>
    <hr />


    <div class="container">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id_listaprecio)

        <div class="form-group row">
            <label class="form-label mt-2 row">Kermesse: </label>
            @Html.DropDownListFor(model => model.id_kermesse, ViewBag.id_kermesse as SelectList, "Seleccione una Kermesse...", htmlAttributes: new { @class = "form-select" })
            @Html.ValidationMessageFor(model => model.id_kermesse, "", new { @class = "text-danger row" })
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.descripcion, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
        </div>

        <div class="container mt-3 col-xs-1" align="center">
            <div class="form-group">
                <input type="submit" value="Guardar cambios" class="btn btn-success" />
                @Html.ActionLink("Regresar", "ListListaPrecio", "", new { @class = "btn btn-primary" })
            </div>
        </div>
    </div>
}

