@using KermesseApp.Models;

@{
    /*Instanciamos objetos y variables */
    KERMESSEEntities4 db = new KERMESSEEntities4();
    tbl_usuario tu = new tbl_usuario();
    tbl_rol_usuario tru = new tbl_rol_usuario();
    List<vw_rol_opciones> listopc = new List<vw_rol_opciones>();
    Int32 idRol = 0;
    String opcion = "";
    Int32 longitud = 0;
    Boolean acceso = false;

    /* Obtenemos la sesion */
    tu = Session["usuario"] as tbl_usuario;

    /* Obtenemos el rol del usuario*/
    tru = db.tbl_rol_usuario.Where(x => x.id_usuario.Equals(tu.id_usuario)).FirstOrDefault();
    idRol = tru.id_rol;
    /* Obtenemos la lista de opciones del rol*/
    listopc = db.vw_rol_opciones.Where(x => x.id_rol.Equals(idRol)).ToList();

    string url = HttpContext.Current.Request.Url.AbsoluteUri;
    string[] separado = url.Split('/');
    string opcionActual = separado[separado.Length - 1];

    longitud = listopc.Count();//Obtenemos la cantidad de elementos
    for (int i = 0; i < longitud; i++)
    {
        //obtenemos la columna opcion de la matriz y/o lista de elementos
        opcion = listopc[i].opcion;
        if (opcionActual.Equals(opcion)) //COMPARAMOS LA OPCION ACTUAL CON CADA OPCIÓN DE LA MATRIZ
        {
            acceso = true; //ACCESO CONCEDIDO
            break;
        }
    }
    if (!acceso)
    {
        Response.Redirect("~/Home/Error");
    }

}
@model IEnumerable<KermesseApp.Models.tbl_rol_usuario>

@{
    ViewBag.Title = "Index";
}



@using (Html.BeginForm("FiltrarRolUsuario", "Tbl_rolusuario", FormMethod.Post))
{
<<div class="card-header">
        <h2>Tablas de roles y usuarios </h2>
    </div>
    <div class="card-body form-horizontal container-fluid justify-content-center">
        <div class="row">
            <div class="form-group col-xs-8 col-md-8">
                <span class="input-group">
                    @Html.TextBox("cadena", null, new { @class = "form-control col-md-4", @placeholder = "Ingrese aqui los datos de la busqueda" })
                    <button type="submit" class="btn btn-success col-md-2">Buscar</button>
                </span>
            </div>
        </div>

    <div class="form-group col-xs-4 col-md-4">
        @*Mandamos a llamar el reporte en los distintos formatos*@
        @Html.ActionLink("PDF", "VerRptRolUs", new { tipo = "PDF" }, new { @class = "btn btn-default" })
        @Html.ActionLink("Excel", "VerRptRolUs", new { tipo = "Excel" }, new { @class = "btn btn-success" })



    </div>

</div>

}
<p>
    @Html.ActionLink("Create New", "CreateRolUs")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.tbl_rol.rol_desc)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.tbl_usuario.usuario)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.tbl_rol.rol_desc)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.tbl_usuario.usuario)
            </td>
            <td>
                @Html.ActionLink("Editar", "EditRolUs", new { id = item.id_rol_usuario }, new { @Class = "btn btn-outline-success btn-sm" }) |
                @Html.ActionLink("Ver", "VerRolUs", new { id = item.id_rol_usuario }, new { @Class = "btn btn-outline-info btn-sm" }) |
                @Html.ActionLink("Eliminar", "DeleteRolUs", new { id = item.id_rol_usuario }, new { @class = "btn btn-outline-danger btn-sm" })
            </td>
        </tr>
    }

</table>
